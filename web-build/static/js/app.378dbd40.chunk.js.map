{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/NotFoundScreen.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/TabOneScreen.tsx","screens/TabTwoScreen.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/startup_logo.png","assets/images/index.png","assets/images/index5.png","assets/images/index4.png","assets/images/team.jpeg"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","NotFoundScreen","navigation","styles","container","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","MonoText","fontFamily","EditScreenInfo","path","getStartedContainer","codeHighlightContainer","homeScreenFilename","getStartedText","width","marginLeft","logo","height","marginVertical","borderRadius","paddingHorizontal","lineHeight","textAlign","marginBottom","helpContainer","marginHorizontal","helpLink","helpLinkText","TabOneScreen","Image","source","require","separator","ScrollView","logo2","logo4","title5","title2","logo3","title4","title3","alignSelf","TabTwoScreen","marginRight","linking","prefixes","Linking","config","screens","Root","TabOne","TabTwo","Modal","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","name","component","BottomTabNavigator","options","headerShown","BottomTab","createBottomTabNavigator","initialRouteName","screenOptions","tabBarActiveTintColor","tabBarIcon","TabBarIcon","FontAwesome","size","App","isLoadingComplete","useState","setLoadingComplete","useEffect","a","async","SplashScreen","Font","font","console","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.378dbd40.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport { RootStackScreenProps } from '../types';\n\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { Text, TextProps } from './Themed';\n\nexport function MonoText(props: TextProps) {\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport { StyleSheet, TouchableOpacity, Image} from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n          <MonoText style={styles.getStartedText}>{path}</MonoText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    width: '90%',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    marginLeft: '5%',\n    // marginHorizontal: 50,\n  },\n  logo: {\n    height: 90,\n    width: 250,\n    marginLeft: 20,\n    marginTop: 20,\n  },\n  homeScreenFilename: {\n    backgroundColor: 'white',\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'white',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    color: 'black',\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n    marginBottom: 50,\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n","import { StyleSheet, ScrollView , Image} from 'react-native';\nimport { MonoText } from '../components/StyledText';\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View} from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nexport default function TabOneScreen({ navigation }: RootTabScreenProps<'TabOne'>) {\n  return (\n    <View style={styles.container}>\n      <Image style={styles.logo} source={require('../assets/images/startup_logo.png')} />\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <ScrollView>\n        <Text style={styles.getStartedText} lightColor=\"rgba(0,0,0,0.8)\" darkColor=\"rgba(255,255,255,0.8)\"> What is the goal of this project ?\n        </Text>\n          <EditScreenInfo path=\"For all event  organizers concerned \n          about their community's ecological impact, PLANT A is a \n          sustainable  water provider that produces single use cans that are\n          not only biodegradable but also plant a flower every time it is thrown out.\"/>\n          <Image style={styles.logo2} source={require('../assets/images/index.png')} />\n          <EditScreenInfo path=\"More than water, Plant-A is your favorite event sponsor\n          Acting as distributors, we offer 2 alternatives:\n          - providing all the information for recycling the bottles\n          - we come pick up the bottles and take them to our trusted partners\" />\n          <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n          <MonoText style={styles.getStartedText}>How it works</MonoText>\n          <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n          <Image style={styles.logo4} source={require('../assets/images/index5.png')} />\n          <MonoText style={styles.title5}>offer a flower to your planet</MonoText>\n          <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n          <MonoText style={styles.title2}>Which flowers are we selling ?</MonoText>\n          <Image style={styles.logo3} source={require('../assets/images/index4.png')} />\n          <MonoText style={styles.title2}>Contact us</MonoText>\n          <MonoText style={styles.title4}>adeleanneclaudy.zoaeter@alumni.esade.edu</MonoText>\n          <MonoText style={styles.title3}>olivia.gaubert@alumni.esade.edu</MonoText>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  getStartedText: {\n    color: 'black',\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n    marginBottom: 50,\n  },\n  logo: {\n    height: 100,\n    width: 250,\n    alignSelf: 'center',\n  },\n  logo2: {\n    height: '15%',\n    width: 230,\n    marginTop: 30,\n    marginBottom: 20,\n    alignSelf: 'center',\n  },\n  logo3: {\n    height: 220,\n    width: 250,\n    alignSelf: 'center',\n    marginTop: 25,\n  },\n  logo4: {\n    height: '15%',\n    width: 250,\n    alignSelf: 'center',\n    marginTop: 20,\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: 'bold',\n  },\n  title2: {\n    color: 'black',\n    marginTop: 40,\n    fontSize: 20,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n  },\n  title3: {\n    color: 'black',\n    marginTop: 20,\n    marginBottom: 40,\n    fontSize: 10,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n  },\n  title4: {\n    color: 'black',\n    marginTop: 20,\n    fontSize: 10,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n  },\n  title5: {\n    color: 'black',\n    marginTop: 40,\n    alignSelf: 'center',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});","import { StyleSheet, Image, ScrollView} from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { MonoText } from '../components/StyledText';\n\nexport default function TabTwoScreen() {\n  return (\n    <View style={styles.container}>\n      <MonoText style={styles.title}>Who are we ?</MonoText>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <ScrollView>\n      <MonoText style={styles.getStartedText}>\n      We are 5 students who got together to start a project to fight for the environment.\n      In our team, there are two entrepreneurs who take care of all the finance, sponsor, business model, target audience.\n      2 Designers who designed the product in terms of its form its usefulness, and its design.\n      1 Programmer who has thought of how to make the product known through technology.\n      </MonoText>\n    <Image style={styles.logo} source={require('../assets/images/team.jpeg')} />\n    </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#a38b57\",\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  getStartedText: {\n    color: 'white',\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n    marginBottom: 50,\n    marginLeft: 25,\n    marginRight: 25,\n  },\n  logo: {\n    height: 400,\n    width: 750,\n    alignSelf: 'center',\n    marginTop: 20,\n  },\n  logo2: {\n    height: 190,\n    width: 250,\n    marginLeft: \"18%\",\n    marginTop: 15,\n  },\n  logo3: {\n    height: 300,\n    width: 250,\n    marginLeft: \"15%\",\n    marginTop: 15,\n  },\n  title: {\n    color: 'white',\n    marginTop: 10,\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  title3: {\n    marginTop: 10,\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    justifyContent: 'center',\n    lineHeight: 25,\n  },\n  title2: {\n    marginTop: 40,\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginLeft: '10%',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n        },\n      },\n      Modal: 'modal',\n      NotFound: '*',\n    },\n  },\n};\n\nexport default linking;\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      {/* <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Manual\" component={ModalScreen} /> \n      </Stack.Group> */}\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Menu\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Menu\"\n        component={TabOneScreen}\n        // options={({ navigation }: RootTabScreenProps<'Menu'>) => ({\n        //   title: 'Menu',\n        //   tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        //   headerRight: () => (\n        //     // <Pressable\n        //     //   onPress={() => navigation.navigate('Manual')}\n        //     //   style={({ pressed }) => ({\n        //     //     opacity: pressed ? 0.5 : 1,\n        //     //   })}>\n        //     //   <FontAwesome\n        //     //     name=\"info-circle\"\n        //     //     size={25}\n        //     //     color={Colors[colorScheme].text}\n        //     //     style={{ marginRight: 15 }}\n        //     //   />\n        //     // </Pressable>\n        //   ),\n        // })}\n      />\n      <BottomTab.Screen\n        name=\"About us\"\n        component={TabTwoScreen}\n        options={{\n          title: 'About us',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n","import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/startup_logo.1baaa59a.png\";","module.exports = __webpack_public_path__ + \"static/media/index.4f67b765.png\";","module.exports = __webpack_public_path__ + \"static/media/index5.76fc37c1.png\";","module.exports = __webpack_public_path__ + \"static/media/index4.ae34e7c5.png\";","module.exports = __webpack_public_path__ + \"static/media/team.1006622c.jpeg\";"],"sourceRoot":""}